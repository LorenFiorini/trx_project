import type Oas from 'oas';
import type { Operation } from 'oas';
import type { HttpMethods } from 'oas/@types/rmoas.types';
import 'isomorphic-fetch';
import getJSONSchemaDefaults from './getJSONSchemaDefaults';
import parseResponse from './parseResponse';
import prepareAuth from './prepareAuth';
import prepareParams from './prepareParams';
import prepareServer from './prepareServer';
export interface ConfigOptions {
    /**
     * By default we parse the response based on the `Content-Type` header of the request. You can
     * disable this functionality by negating this option.
     */
    parseResponse: boolean;
}
export { getJSONSchemaDefaults, parseResponse, prepareAuth, prepareParams, prepareServer };
export default class APICore {
    spec: Oas;
    private auth;
    private server;
    private config;
    private userAgent;
    constructor(spec?: Oas, userAgent?: string);
    setSpec(spec: Oas): void;
    setConfig(config: ConfigOptions): this;
    setUserAgent(userAgent: string): this;
    setAuth(...values: string[] | number[]): this;
    setServer(url: string, variables?: Record<string, string | number>): this;
    fetch(path: string, method: HttpMethods, body?: unknown, metadata?: Record<string, unknown>): Promise<any>;
    fetchOperation(operation: Operation, body?: unknown, metadata?: Record<string, unknown>): Promise<any>;
}
